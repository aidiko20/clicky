{"version":3,"sources":["components/jumbotron/index.js","components/wrapper/index.js","components/friendCard/index.js","App.js","index.js"],"names":["Jumbotron","props","className","children","score","highScore","Wrapper","Card","onClick","clickCount","id","alt","name","src","image","App","state","friends","gameOver","setState","console","log","this","forEach","friend","count","alert","find","y","i","sort","Math","random","map","card","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"66DAaeA,G,YAVG,SAAAC,GAAK,OACrB,yBAAKC,UAAU,UAEb,yBAAKA,UAAU,SAASD,EAAME,UAC9B,yBAAKD,UAAU,UAAf,UACUD,EAAMG,MADhB,eACmCH,EAAMI,cCH9BC,G,MAFC,SAAAL,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAME,YCQ1CI,G,MARF,SAAAN,GAAK,OAChB,yBAAKC,UAAU,OAAOM,QAAS,kBAAMP,EAAMQ,WAAWR,EAAMS,MAC1D,yBAAKR,UAAU,iBACb,yBAAKS,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,Y,OC4DxBC,E,2MAzDbC,MAAQ,CACNC,UACAb,MAAO,EACPC,UAAW,G,EAIba,SAAW,WAWT,OAVI,EAAKF,MAAMZ,MAAQ,EAAKY,MAAMX,WAChC,EAAKc,SAAS,CAACd,UAAW,EAAKW,MAAMZ,OAAQ,WAC3CgB,QAAQC,IAAIC,KAAKN,MAAMX,aAG3B,EAAKW,MAAMC,QAAQM,QAAQ,SAAAC,GACzBA,EAAOC,MAAQ,IAEjBC,MAAM,yBAAD,OAA0B,EAAKV,MAAMZ,QAC1C,EAAKe,SAAS,CAACf,MAAO,KACf,G,EAGTK,WAAa,SAAAC,GACX,EAAKM,MAAMC,QAAQU,KAAK,SAACC,EAAGC,GAC1B,GAAID,EAAElB,KAAOA,EAAI,CACf,GAAwB,IAArBO,EAAQY,GAAGJ,MAMZ,OALAR,EAAQY,GAAGJ,MAAQR,EAAQY,GAAGJ,MAAQ,EACtC,EAAKN,SAAS,CAACf,MAAQ,EAAKY,MAAMZ,MAAQ,GAAI,WAC5CgB,QAAQC,IAAIC,KAAKN,MAAMZ,SAEzB,EAAKY,MAAMC,QAAQa,KAAK,kBAAMC,KAAKC,SAAW,KACvC,EAEP,EAAKd,e,wEAKH,IAAD,OACT,OACE,kBAAC,EAAD,KACF,kBAAC,EAAD,CAAWd,MAAOkB,KAAKN,MAAMZ,MAAOC,UAAWiB,KAAKN,MAAMX,WAA1D,eAGAiB,KAAKN,MAAMC,QAAQgB,IAAK,SAAAC,GAAI,OAC1B,kBAAC,EAAD,CACEzB,WAAY,EAAKA,WACjBC,GAAIwB,EAAKxB,GACTyB,IAAKD,EAAKxB,GACVI,MAAOoB,EAAKpB,e,GAjDAsB,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1d27a242.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Jumbotron = props => (\n  <div className=\"header\">\n\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highScore}\n    </div>\n  </div>\n);\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Wrapper from \"./components/wrapper\";\nimport Card from \"./components/friendCard\";\nimport friends from \"./friends.json\";\nimport \"./style.css\"\n\nclass App extends React.Component {\n  state = {\n    friends,\n    score: 0,\n    highScore: 0,\n  };\n\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({highScore: this.state.score}, function() {\n        console.log(this.state.highScore);\n      });\n    }\n    this.state.friends.forEach(friend => {\n      friend.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.friends.find((y, i) => {\n      if (y.id === id) {\n        if(friends[i].count === 0){\n          friends[i].count = friends[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 1)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  render() {\n  return(\n    <Wrapper>\n  <Jumbotron score={this.state.score} highScore={this.state.highScore}>Clicky Game</Jumbotron>\n{\n \n  this.state.friends.map( card => (\n    <Card\n      clickCount={this.clickCount}\n      id={card.id}\n      key={card.id}\n      image={card.image}\n    />\n  ))\n}\n  </Wrapper >\n  \n  );\n}\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}